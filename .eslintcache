[{"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\index.js":"1","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\App.js":"2","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\reportWebVitals.js":"3","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\AddData.js":"4","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NavbarContainer.js":"5","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\global_items.js":"6","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NapTimesChart.js":"7","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\EnterBedTimesChart.js":"8","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\MorningWakeTimesChart.js":"9","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\LightsOffTimesChart.js":"10","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ExitBedTimesChart.js":"11","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\TimeToFallAsleepChart.js":"12","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ShootingStarTest.js":"13","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\HomeLoggedOut.js":"14","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\CreateAccount.js":"15","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\CreateAccountSuccess.js":"16","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\MinutesEarlyWokeChart.js":"17","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ArousalDurationChart.js":"18","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\QualityRatingChart.js":"19","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\SleepAidItemChart.js":"20","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NightModeSwitch.js":"21"},{"size":661,"mtime":1609548489364,"results":"22","hashOfConfig":"23"},{"size":9225,"mtime":1610496289083,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":15063,"mtime":1610507941837,"results":"26","hashOfConfig":"23"},{"size":5598,"mtime":1610485418546,"results":"27","hashOfConfig":"23"},{"size":3760,"mtime":1610510488517,"results":"28","hashOfConfig":"23"},{"size":6232,"mtime":1610510917614,"results":"29","hashOfConfig":"23"},{"size":4281,"mtime":1610509260197,"results":"30","hashOfConfig":"23"},{"size":4144,"mtime":1610509305344,"results":"31","hashOfConfig":"23"},{"size":4705,"mtime":1610509362617,"results":"32","hashOfConfig":"23"},{"size":4130,"mtime":1610509277923,"results":"33","hashOfConfig":"23"},{"size":5218,"mtime":1610510800945,"results":"34","hashOfConfig":"23"},{"size":550,"mtime":1610073486623,"results":"35","hashOfConfig":"23"},{"size":2871,"mtime":1610427695167,"results":"36","hashOfConfig":"23"},{"size":7227,"mtime":1610083989229,"results":"37","hashOfConfig":"23"},{"size":1155,"mtime":1610083989231,"results":"38","hashOfConfig":"23"},{"size":5195,"mtime":1610511003336,"results":"39","hashOfConfig":"23"},{"size":5913,"mtime":1610509346794,"results":"40","hashOfConfig":"23"},{"size":5545,"mtime":1610510907790,"results":"41","hashOfConfig":"23"},{"size":5924,"mtime":1610510900997,"results":"42","hashOfConfig":"23"},{"size":1340,"mtime":1610485428646,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"asvjz",{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\index.js",[],["92","93"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\App.js",["94","95","96","97","98","99"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\reportWebVitals.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\AddData.js",["100"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NavbarContainer.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\global_items.js",["101"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NapTimesChart.js",["102","103","104","105"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\EnterBedTimesChart.js",["106","107","108","109","110","111"],"import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './EnterBedTimesChart.scss';\r\nimport { VictoryChart, VictoryAxis, VictoryTheme, VictoryLine, VictoryLabel, VictoryTooltip, VictoryScatter } from 'victory';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport {url, c, nightModeTransitionTime, victoryAxisStyle, getLongDate,  VictoryScatterLineComplement, victoryLineStyle} from './global_items';\r\n\r\nconst urlGetData = `${url}get-data`;\r\n//make it so graph updates when component loads\r\n\r\nclass EnterBedTimesChart extends React.Component {\r\n  state = {\r\n    chartInfo: []\r\n  }\r\n  componentDidMount(){\r\n    axios.post(urlGetData, {user: this.props.loggedInUser})\r\n    .then(res => {\r\n      let newChartInfo = [];\r\n      res.data.map(x => {\r\n        newChartInfo = [...newChartInfo, {\r\n          date: x.date,\r\n          enterBedTime: x.enterBedTime\r\n        }];\r\n        return null;\r\n      })\r\n      this.setState({chartInfo: newChartInfo});\r\n    })\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    if (prevProps.loggedInUser !== this.props.loggedInUser){\r\n      axios.post(urlGetData, {user: this.props.loggedInUser})\r\n      .then(res => {\r\n        let newChartInfo = [];\r\n        res.data.map(x => {\r\n          newChartInfo = [...newChartInfo, {\r\n            date: x.date,\r\n            enterBedTime: x.enterBedTime\r\n          }];\r\n          return null;\r\n        })\r\n        this.setState({chartInfo: newChartInfo});\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const {chartInfo} = this.state;\r\n    let dateLabels = [];\r\n    let xAxisTickValues = [];\r\n    let data;\r\n    if (chartInfo.length > 1) {\r\n      data = chartInfo.filter(napObj => napObj.enterBedTime).map((e, i, arr) => {\r\n        //DATE JAN 1 2000 USED BECAUSE DATE NEEDED FOR TIME VALUE\r\n        const dateTime = new Date(`January 1, 2000 ${e.enterBedTime}`);\r\n        const dateTimeEnd = new Date(`January 1, 2000 ${e.napEndTime}`);\r\n        const date = Math.floor(Date.parse(e.date)/1000/86400);\r\n        xAxisTickValues = [...xAxisTickValues, date];\r\n        const dateLabelPrimer = new Date(Date.parse(e.date));\r\n        const dateLabel = `${dateLabelPrimer.getMonth()+1}/${dateLabelPrimer.getDate()}`; \r\n        dateLabels = [...dateLabels, dateLabel];\r\n        return(\r\n          { x: date, y: dateTime, dateLabel: getLongDate(dateLabelPrimer), timeLabel: formatAMPM(dateTime) }\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"victory-chart-1-container\">\r\n          <VictoryChart\r\n            theme={VictoryTheme.material}\r\n            padding={{ left: 70, top: 20, right: 30, bottom: 50 }}\r\n            scale={{y:'time'}}\r\n            domainPadding={{ x: 20, y: 20 }}\r\n          >\r\n            <VictoryAxis\r\n              tickValues={xAxisTickValues}\r\n              tickFormat={dateLabels}\r\n              tickLabelComponent={<VictoryLabel dy={0} dx={10} angle={55}/>}\r\n              fixLabelOverlap={true}\r\n              style={victoryAxisStyle('x', this.props.nightMode)}\r\n              />\r\n            <VictoryAxis\r\n              style={victoryAxisStyle('y', this.props.nightMode)}\r\n              dependentAxis\r\n              tickFormat={(y) => formatAMPM(y)}\r\n            />\r\n            <VictoryLine\r\n              data={data}\r\n              style={victoryLineStyle(this.props.nightMode, 'enterBedCharts')}\r\n            />\r\n            {VictoryScatterLineComplement(data, this.props.nightMode)}\r\n          </VictoryChart>\r\n          <h2 className={this.props.nightMode ? \"enter-bed-charts enter-bed-charts-heading-night\" : \"enter-bed-charts-heading\"} title=\"This is the time that you entered your bed - you may not yet have turned the lights off.\">Time I Got in Bed</h2>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EnterBedTimesChart; \r\n\r\nfunction formatAMPM(date) {\r\n  var hours = date.getHours();\r\n  var minutes = date.getMinutes();\r\n  var ampm = hours >= 12 ? 'pm' : 'am';\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12; // the hour '0' should be '12'\r\n  minutes = minutes < 10 ? '0'+minutes : minutes;\r\n  var strTime = hours + ':' + minutes + ' ' + ampm;\r\n  return strTime;\r\n}\r\n\r\nEnterBedTimesChart.propTypes = {\r\n  dates: PropTypes.array,\r\n  nightMode: PropTypes.bool, \r\n  loggedInUser: PropTypes.string\r\n}","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\MorningWakeTimesChart.js",["112","113","114"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\LightsOffTimesChart.js",["115","116","117"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ExitBedTimesChart.js",["118","119","120"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\TimeToFallAsleepChart.js",["121","122","123"],"import React from 'react';\r\nimport { VictoryChart, VictoryAxis, VictoryTheme, VictoryBar, VictoryLabel, VictoryTooltip } from 'victory';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport {url, c, victoryAxisStyle, nightModeTransitionTime, flyoutStyleNight, victoryTooltipLabelStyle} from './global_items';\r\n\r\nconst urlGetData = `${url}get-data`;\r\n\r\nclass TimeToFallAsleepChart extends React.Component {\r\n  state = {\r\n    chartInfo: []\r\n  }\r\n  componentDidMount(){\r\n    axios.post(urlGetData, {user: this.props.loggedInUser})\r\n    .then(res => {\r\n      let newChartInfo = [];\r\n      res.data.map(x => {\r\n        newChartInfo = [...newChartInfo, {\r\n          date: x.date,\r\n          timeToFallAsleep: x.timeToFallAsleep\r\n        }];\r\n        return null;\r\n      })\r\n      this.setState({chartInfo: newChartInfo});\r\n    })\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    if (prevProps.loggedInUser !== this.props.loggedInUser){\r\n      axios.post(urlGetData, {user: this.props.loggedInUser})\r\n      .then(res => {\r\n        let newChartInfo = [];\r\n        res.data.map(x => {\r\n          newChartInfo = [...newChartInfo, {\r\n            date: x.date,\r\n            timeToFallAsleep: x.timeToFallAsleep\r\n          }];\r\n          return null;\r\n        })\r\n        this.setState({chartInfo: newChartInfo});\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const {chartInfo} = this.state;\r\n    let dateLabels = [];\r\n    let xAxisTickValues = [];\r\n    let data;\r\n    if (chartInfo.length > 1) {\r\n      data = chartInfo.filter(napObj => napObj.timeToFallAsleep).map((e, i, arr) => {\r\n        const date = Math.floor(Date.parse(e.date)/1000/86400);\r\n        xAxisTickValues = [...xAxisTickValues, date];\r\n        const dateLabelPrimer = new Date(Date.parse(e.date));\r\n        const dateLabel = `${dateLabelPrimer.getMonth()+1}/${dateLabelPrimer.getDate()}`; \r\n        const firstDate = Math.floor(Date.parse(arr[0].date)/1000/86400);\r\n        const lastDate = Math.floor(Date.parse(arr[arr.length - 1].date)/1000/86400);\r\n        const dateDiff = lastDate - firstDate;\r\n        if (dateDiff < 15) {\r\n          dateLabels = [...dateLabels, dateLabel];\r\n        } else {\r\n          if (date % 2 === 0){\r\n            dateLabels = [...dateLabels, null]\r\n          } else {\r\n            dateLabels = [...dateLabels, dateLabel];\r\n          }\r\n        }\r\n        return(\r\n          { x: date, y: e.timeToFallAsleep, dateLabel: dateLabel}\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n          <div className=\"victory-chart-1-container\">\r\n            <VictoryChart\r\n              theme={VictoryTheme.material}\r\n              padding={{ left: 70, top: 20, right: 30, bottom: 50 }}\r\n              scale={{y:'number'}}\r\n              domainPadding={{ x: 20, y: 20 }}\r\n            >\r\n              <VictoryAxis\r\n                tickValues={xAxisTickValues}\r\n                tickFormat={dateLabels}\r\n                tickLabelComponent={<VictoryLabel dy={0} dx={10} angle={55}/>}\r\n                fixLabelOverlap={true}\r\n                style={victoryAxisStyle('x', this.props.nightMode)}\r\n                />\r\n              <VictoryAxis\r\n                style={{grid:{stroke:'black', strokeDasharray: '7'}}}\r\n                dependentAxis\r\n                tickFormat={(y) => `${y} min` }\r\n                style={victoryAxisStyle('y', this.props.nightMode)}\r\n              />\r\n              <VictoryBar\r\n                style={{\r\n                  data: {\r\n                    fill: this.props.nightMode ? 'rgb(0 168 255)' : '#00b6ba', \r\n                    transition: `fill ${nightModeTransitionTime}`\r\n                  },\r\n                  labels: {\r\n                    fill: this.props.nightMode ? 'white' : 'black'\r\n                  }\r\n                }}\r\n                data={data}\r\n                barWidth={() => {\r\n                  let firstDate;\r\n                  let lastDate;\r\n                  let dateDiff;\r\n                  if (data) {\r\n                    firstDate = data[0].x; \r\n                    lastDate = data[data.length - 1].x; \r\n                    dateDiff = lastDate - firstDate;\r\n                  }\r\n                  return(\r\n                    dateDiff < 10 ? 18\r\n                    : dateDiff < 20 ? 8\r\n                    : 4 \r\n                  );\r\n                }}\r\n                labels={({ datum }) => {\r\n                  if (datum){\r\n                    return(\r\n                      `${datum.timeLabel}\\n${datum.dateLabel}`\r\n                    );\r\n                  }\r\n                }}\r\n                labelComponent={\r\n                  <VictoryTooltip\r\n                    flyoutStyle={flyoutStyleNight(this.props.nightMode)}\r\n                  />\r\n                }\r\n              />\r\n            </VictoryChart>\r\n              <h2 className={this.props.nightMode ? \"enter-bed-charts-heading-night\" : \"enter-bed-charts-heading\"} title=\"How long it took you to fall asleep after turning the lights off.\">How Long To Fall Asleep</h2>\r\n          </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimeToFallAsleepChart; \r\n\r\nTimeToFallAsleepChart.propTypes = {\r\n  dates: PropTypes.array,\r\n  nightMode: PropTypes.bool, \r\n  loggedInUser: PropTypes.string\r\n}\r\n           ","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ShootingStarTest.js",["124"],"\r\nimport shootingStar from './images/shooting-star-opt.svg';\r\nimport './HomeLoggedOut.scss';\r\n\r\nfunction ShootingStarTest(){\r\n  return(\r\n    <div className=\"divdiv\" style={{backgroundColor: 'black', width: '100vh', height: '100vh'}}>\r\n      <div className=\"home-logged-out-section-1-shooting-star\">\r\n        <svg id=\"SVGRoot\" width=\"5\" height=\"5\" version=\"1.1\" viewBox=\"0 0 5 5\">\r\n          <circle cx=\"2.5446\" cy=\"2.4777\" r=\"2.3661\" fill=\"#fff\" stroke-width=\"0\"/>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShootingStarTest;",["125","126"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\HomeLoggedOut.js",["127","128","129"],"import { Button, Container } from 'react-bootstrap';\r\nimport './HomeLoggedOut.scss';\r\nimport graphScreenshot1 from './images/time-out-of-bed-screenshot-square.png';\r\nimport graphScreenshot2 from './images/time-to-fall-asleep-screenshot-square.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction HomeLoggedOut() {\r\n  return(\r\n    <>\r\n      <div className=\"home-logged-out-section-1-shooting-star\">\r\n        <svg width=\"60mm\" height=\"60mm\" version=\"1.1\" viewBox=\"0 0 60 60\">\r\n          <defs>\r\n            <filter id=\"filter6059\" x=\"-1.9142e-5\" y=\"-1.9258e-5\" width=\"1\" height=\"1\" color-interpolation-filters=\"sRGB\">\r\n            <feGaussianBlur stdDeviation=\"0.00049892852\"/>\r\n            </filter>\r\n          </defs>\r\n          <path transform=\"matrix(.9426 0 0 .94833 1.2795 2.1897)\" d=\"m-0.75595 60.665 62.555-62.177\" fill=\"none\" filter=\"url(#filter6059)\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"1.3992\"/>\r\n          </svg>\r\n      </div>\r\n      \r\n      <Container className=\"home-logged-out-container\">\r\n        <div className=\"home-logged-out-section home-logged-out-section-1\">\r\n          <h1>Welcome to Sleep App</h1>\r\n          <div>Improve your sleep.</div>\r\n          <div>Change your life.</div>\r\n        </div>\r\n\r\n        <div className=\"home-logged-out-section home-logged-out-section-2\">\r\n          <div  className=\"home-logged-out-section-background home-logged-out-section-2-background\"></div>\r\n          <div className=\"home-logged-out-section-text\">\r\n            <h2>How It Works</h2>\r\n            <div>Simply input your sleep data each day, and view generated graphs to track your sleep progress.</div>\r\n          </div>\r\n          <div className=\"home-logged-out-section-2-graphs\">\r\n            <img src={graphScreenshot1} />\r\n            <img src={graphScreenshot2} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"home-logged-out-section home-logged-out-section-3\">\r\n          <div  className=\"home-logged-out-section-background home-logged-out-section-3-background\"></div>\r\n          <div className=\"home-logged-out-section-text\">\r\n            <h2>Why Seeing Data Helps</h2>\r\n            <div>Having a visual record of your sleep habits allows you to compare which factors are affecting your sleep wellness.</div>\r\n          </div>\r\n          <div className=\"home-logged-out-section-2-graphs\">\r\n            <img src={graphScreenshot2} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"home-logged-out-section home-logged-out-section-1\">\r\n          <h2>Better sleep.</h2>\r\n          <h2>Better life.</h2>\r\n          <h2>Starting tonight.</h2>\r\n          <div className=\"home-logged-out-section-3-button-container\">\r\n            <Button as={Link} to={'/sleep/create-account'}>Create Account</Button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeLoggedOut; ","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\CreateAccount.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\CreateAccountSuccess.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\MinutesEarlyWokeChart.js",["130","131"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ArousalDurationChart.js",["132"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\QualityRatingChart.js",["133","134"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\SleepAidItemChart.js",["135","136"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NightModeSwitch.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":11,"column":14,"nodeType":"143","messageId":"144","endLine":11,"endColumn":15},{"ruleId":"141","severity":1,"message":"145","line":16,"column":21,"nodeType":"143","messageId":"144","endLine":16,"endColumn":24},{"ruleId":"141","severity":1,"message":"146","line":16,"column":26,"nodeType":"143","messageId":"144","endLine":16,"endColumn":29},{"ruleId":"141","severity":1,"message":"147","line":26,"column":9,"nodeType":"143","messageId":"144","endLine":26,"endColumn":17},{"ruleId":"141","severity":1,"message":"148","line":48,"column":9,"nodeType":"143","messageId":"144","endLine":48,"endColumn":22},{"ruleId":"141","severity":1,"message":"149","line":65,"column":9,"nodeType":"143","messageId":"144","endLine":65,"endColumn":30},{"ruleId":"150","severity":1,"message":"151","line":39,"column":6,"nodeType":"152","endLine":39,"endColumn":13,"suggestions":"153"},{"ruleId":"141","severity":1,"message":"154","line":28,"column":7,"nodeType":"143","messageId":"144","endLine":28,"endColumn":22},{"ruleId":"141","severity":1,"message":"155","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":7,"column":14,"nodeType":"143","messageId":"144","endLine":7,"endColumn":15},{"ruleId":"141","severity":1,"message":"156","line":62,"column":15,"nodeType":"143","messageId":"144","endLine":62,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":98,"column":15,"nodeType":"159","endLine":98,"endColumn":66},{"ruleId":"141","severity":1,"message":"155","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":19},{"ruleId":"141","severity":1,"message":"160","line":4,"column":78,"nodeType":"143","messageId":"144","endLine":4,"endColumn":92},{"ruleId":"141","severity":1,"message":"161","line":4,"column":94,"nodeType":"143","messageId":"144","endLine":4,"endColumn":108},{"ruleId":"141","severity":1,"message":"142","line":7,"column":14,"nodeType":"143","messageId":"144","endLine":7,"endColumn":15},{"ruleId":"141","severity":1,"message":"162","line":7,"column":17,"nodeType":"143","messageId":"144","endLine":7,"endColumn":40},{"ruleId":"141","severity":1,"message":"163","line":55,"column":15,"nodeType":"143","messageId":"144","endLine":55,"endColumn":26},{"ruleId":"141","severity":1,"message":"155","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":7,"column":14,"nodeType":"143","messageId":"144","endLine":7,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":84,"column":15,"nodeType":"159","endLine":84,"endColumn":66},{"ruleId":"141","severity":1,"message":"155","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":19},{"ruleId":"141","severity":1,"message":"161","line":3,"column":78,"nodeType":"143","messageId":"144","endLine":3,"endColumn":92},{"ruleId":"141","severity":1,"message":"142","line":6,"column":14,"nodeType":"143","messageId":"144","endLine":6,"endColumn":15},{"ruleId":"141","severity":1,"message":"155","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":6,"column":14,"nodeType":"143","messageId":"144","endLine":6,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":83,"column":17,"nodeType":"159","endLine":83,"endColumn":68},{"ruleId":"141","severity":1,"message":"142","line":5,"column":14,"nodeType":"143","messageId":"144","endLine":5,"endColumn":15},{"ruleId":"141","severity":1,"message":"164","line":5,"column":78,"nodeType":"143","messageId":"144","endLine":5,"endColumn":102},{"ruleId":"157","severity":1,"message":"158","line":91,"column":17,"nodeType":"159","endLine":91,"endColumn":68},{"ruleId":"141","severity":1,"message":"165","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":20},{"ruleId":"137","replacedBy":"166"},{"ruleId":"139","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":35,"column":13,"nodeType":"170","endLine":35,"endColumn":43},{"ruleId":"168","severity":1,"message":"169","line":36,"column":13,"nodeType":"170","endLine":36,"endColumn":43},{"ruleId":"168","severity":1,"message":"169","line":47,"column":13,"nodeType":"170","endLine":47,"endColumn":43},{"ruleId":"141","severity":1,"message":"142","line":5,"column":14,"nodeType":"143","messageId":"144","endLine":5,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":93,"column":17,"nodeType":"159","endLine":93,"endColumn":68},{"ruleId":"141","severity":1,"message":"142","line":5,"column":14,"nodeType":"143","messageId":"144","endLine":5,"endColumn":15},{"ruleId":"141","severity":1,"message":"142","line":5,"column":14,"nodeType":"143","messageId":"144","endLine":5,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":95,"column":17,"nodeType":"159","endLine":95,"endColumn":68},{"ruleId":"141","severity":1,"message":"142","line":5,"column":14,"nodeType":"143","messageId":"144","endLine":5,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":96,"column":17,"nodeType":"159","endLine":96,"endColumn":68},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'c' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Row' is defined but never used.","'Redirect' is defined but never used.","'checkLoggedIn' is assigned a value but never used.","'handleNewLoggedInUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkExistingData'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'victoryBarStyle' is assigned a value but never used.","'Container' is defined but never used.","'dateDiff' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'VictoryTooltip' is defined but never used.","'VictoryScatter' is defined but never used.","'nightModeTransitionTime' is defined but never used.","'dateTimeEnd' is assigned a value but never used.","'victoryTooltipLabelStyle' is defined but never used.","'shootingStar' is defined but never used.",["171"],["172"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [checkExistingData, props]",{"range":"176","text":"177"},[1756,1763],"[checkExistingData, props]"]