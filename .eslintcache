[{"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\index.js":"1","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\App.js":"2","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\reportWebVitals.js":"3","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\AddData.js":"4","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NavbarContainer.js":"5","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\global_items.js":"6","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NapTimesChart.js":"7","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\EnterBedTimesChart.js":"8","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\MorningWakeTimesChart.js":"9","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\LightsOffTimesChart.js":"10","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ExitBedTimesChart.js":"11","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\TimeToFallAsleepChart.js":"12","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ShootingStarTest.js":"13","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\HomeLoggedOut.js":"14","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\CreateAccount.js":"15","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\CreateAccountSuccess.js":"16","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\MinutesEarlyWokeChart.js":"17","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ArousalDurationChart.js":"18","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\QualityRatingChart.js":"19","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\SleepAidItemChart.js":"20","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NightModeSwitch.js":"21"},{"size":661,"mtime":1609548489364,"results":"22","hashOfConfig":"23"},{"size":9363,"mtime":1610515145304,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":15293,"mtime":1610516506410,"results":"26","hashOfConfig":"23"},{"size":5598,"mtime":1610485418546,"results":"27","hashOfConfig":"23"},{"size":4149,"mtime":1610513104945,"results":"28","hashOfConfig":"23"},{"size":5886,"mtime":1610514659929,"results":"29","hashOfConfig":"23"},{"size":4250,"mtime":1610514523290,"results":"30","hashOfConfig":"23"},{"size":4160,"mtime":1610513295480,"results":"31","hashOfConfig":"23"},{"size":4004,"mtime":1610514492272,"results":"32","hashOfConfig":"23"},{"size":4130,"mtime":1610509277923,"results":"33","hashOfConfig":"23"},{"size":4866,"mtime":1610514480595,"results":"34","hashOfConfig":"23"},{"size":550,"mtime":1610073486623,"results":"35","hashOfConfig":"23"},{"size":2871,"mtime":1610427695167,"results":"36","hashOfConfig":"23"},{"size":7227,"mtime":1610083989229,"results":"37","hashOfConfig":"23"},{"size":1155,"mtime":1610083989231,"results":"38","hashOfConfig":"23"},{"size":4836,"mtime":1610512299148,"results":"39","hashOfConfig":"23"},{"size":5514,"mtime":1610514456150,"results":"40","hashOfConfig":"23"},{"size":5569,"mtime":1610514604895,"results":"41","hashOfConfig":"23"},{"size":5218,"mtime":1610514469764,"results":"42","hashOfConfig":"23"},{"size":1340,"mtime":1610485428646,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"asvjz",{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\index.js",[],["92","93"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\App.js",["94","95","96","97","98","99"],"import './App.css';\r\nimport NapTimesChart from './NapTimesChart';\r\nimport {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport NavbarContainer from './NavbarContainer';\r\nimport AddData from './AddData';\r\nimport './App.css';\r\nimport './App.scss';\r\nimport React from 'react';\r\nimport {Switch, Route} from 'react-router';\r\nimport {url, c} from './global_items';\r\nimport EnterBedTimesChart from './EnterBedTimesChart';\r\nimport MorningWakeTimesChart from './MorningWakeTimesChart';\r\nimport LightsOffTimesChart from './LightsOffTimesChart';\r\nimport ExitBedTimesChart from './ExitBedTimesChart';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport TimeToFallAsleepChart from './TimeToFallAsleepChart';\r\nimport HomeLoggedOut from './HomeLoggedOut';\r\nimport CreateAccount from './CreateAccount';\r\nimport CreateAccountSuccess from './CreateAccountSuccess';\r\nimport backgroundTop from './landing-background-opt.svg';\r\nimport MinutesEarlyWokeChart from './MinutesEarlyWokeChart';\r\nimport ArousalDurationChart from './ArousalDurationChart';\r\nimport QualityRatingChart from './QualityRatingChart';\r\nimport SleepAidItemChart from './SleepAidItemChart';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst urlAuth = `${url}auth`;\r\naxios.defaults.headers.common['Cache-Control'] = 'no-cache';\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n  const [loggedInUserError, setLoggedinUserError] = useState(null);\r\n  const [nightMode, setNightMode] = useState(true);\r\n  // const [intervalId, setIntervalId] = useState(null);\r\n  useEffect(() => {\r\n    axios.get(urlAuth) \r\n    .then(res => { \r\n      setLoggedInUser(res.data);\r\n    }).catch(error => {console.log(error)})\r\n    // const intervalId = setInterval(checkLoggedIn, 2000);\r\n    // setIntervalId(intervalId);\r\n  }, [])\r\n  \r\n  const checkLoggedIn = () => {\r\n    axios.get(urlAuth) \r\n    .then(res => { \r\n      setLoggedInUser(res.data);\r\n    }).catch(error => {\r\n      console.log(error)\r\n      console.log('Axios error. User logged out.')\r\n      if (loggedInUserError === false) {\r\n        console.log('Axios error. User logged out.')\r\n        if (url !== 'http://localhost:4000/recipeapp/recipeapp-server/'){\r\n          alert(\"There was an error with the server. ðŸ¤¬ Alert the Webmaster!\");\r\n        }\r\n        setLoggedinUserError(true);\r\n      }\r\n      setLoggedInUser(null);\r\n    })\r\n  }\r\n  const handleNewLoggedInUser = (newLoggedInUser) => {\r\n    setLoggedInUser(newLoggedInUser);\r\n  }\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios.post(urlAuth,     \r\n      {\r\n        username: username, \r\n        password: password \r\n      }\r\n    )\r\n    .then(response => {\r\n    }).catch(error => {console.log(error)})\r\n    .then( \r\n      axios.get(urlAuth) \r\n      .then(res => { \r\n        setLoggedInUser(res.data);\r\n      }).catch(error => {console.log('Axios error from urlAuth: ', error)})\r\n    )\r\n  }\r\n  const handleLoginFormChange = (eTargetAttrVal, item) => {\r\n    console.log('loginformchage')\r\n    if (item === 'username'){\r\n      setUsername(eTargetAttrVal);\r\n    } else if (item === 'password') {\r\n      setPassword(eTargetAttrVal);\r\n    }\r\n  }\r\n  const handleLogout = () => {\r\n    setLoggedInUser(null);\r\n  }\r\n  const navbar = \r\n    <NavbarContainer\r\n      setNightMode={setNightMode}\r\n      nightMode={nightMode}\r\n      loginSubmit={handleLoginSubmit}\r\n      onLoginFormChange={handleLoginFormChange}\r\n      loggedInUser={loggedInUser}\r\n      onLogout={handleLogout}\r\n      username={username}\r\n      password={password}\r\n    />\r\n  ;\r\n  return(\r\n    <Switch>\r\n      <Route path=\"/sleep/create-account-success\" render={() => (\r\n        <>\r\n          {navbar}\r\n          <CreateAccountSuccess \r\n            loggedInUser={loggedInUser}\r\n          />\r\n        </>\r\n      )} />\r\n      <Route path=\"/sleep/create-account\" render={() => (\r\n        <>\r\n          {navbar}\r\n          <CreateAccount />\r\n        </>\r\n      )} />\r\n      <Route path=\"/sleep/home-logged-out\" render={() => (\r\n        <>\r\n          <div className=\"home-logged-out-section-1-background\"\r\n          style={{backgroundImage: `url(${backgroundTop})`}}\r\n          ></div>\r\n          {navbar}\r\n          <HomeLoggedOut />\r\n        </>\r\n      )} />\r\n      <Route path=\"/sleep/add-data\">\r\n        <>\r\n          {navbar}\r\n          <div className={nightMode && \"add-data-component-wrapper-night\"}>\r\n            <AddData \r\n              nightMode={nightMode}\r\n              loggedInUser={loggedInUser}\r\n            />\r\n          </div>\r\n        </>\r\n      </Route>\r\n      <Route path=\"/sleep\">\r\n        <>\r\n          {navbar}\r\n          {/* {!loggedInUser && <Redirect to=\"/sleep/home-logged-out\" />} */}\r\n          <Container fluid className={nightMode ? \"app-charts-container app-charts-container-night-mode \": \"app-charts-container\"}>\r\n            <div className=\"ct1\">\r\n              <EnterBedTimesChart \r\n                nightMode={nightMode}\r\n                loggedInUser={loggedInUser}\r\n                />\r\n            </div>\r\n            <div className=\"ct2\">\r\n              <LightsOffTimesChart \r\n                nightMode={nightMode}\r\n                loggedInUser={loggedInUser}\r\n                />\r\n            </div>\r\n            <div className=\"ct3\">\r\n              <TimeToFallAsleepChart \r\n                nightMode={nightMode}\r\n                loggedInUser={loggedInUser}\r\n                />\r\n            </div>\r\n            <div className=\"ct9\">\r\n              <MorningWakeTimesChart \r\n                nightMode={nightMode}\r\n                loggedInUser={loggedInUser}\r\n                />\r\n            </div>\r\n            <div className=\"ct8\">\r\n              <ExitBedTimesChart \r\n                nightMode={nightMode}\r\n                loggedInUser={loggedInUser}\r\n                />\r\n            </div>\r\n            <div className=\"ct7\">\r\n              <MinutesEarlyWokeChart \r\n                nightMode={nightMode}\r\n                loggedInUser={loggedInUser}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"ct4\">\r\n              <SleepAidItemChart \r\n                nightMode={nightMode}\r\n                loggedInUser={loggedInUser}\r\n                />\r\n            </div>\r\n            <div className=\"ct6\">\r\n              <ArousalDurationChart \r\n                nightMode={nightMode}\r\n                loggedInUser={loggedInUser}\r\n              />\r\n            </div>\r\n            <div className=\"ct5\">\r\n              <QualityRatingChart \r\n                nightMode={nightMode}\r\n                loggedInUser={loggedInUser}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"ct10\">\r\n              <NapTimesChart \r\n                nightMode={nightMode}\r\n                loggedInUser={loggedInUser}\r\n                />\r\n            </div>\r\n          </Container>\r\n        </>\r\n      </Route>\r\n      <Route path=\"/recipeapp/create-account-success\" render={() => (\r\n        <>\r\n          {navbar}\r\n          {/* <CreateAccountSuccess\r\n            loggedInUser={loggedInUser}\r\n            onLogout={this.handleLogout}\r\n          /> */}\r\n        </>\r\n      )} />\r\n      <Route path=\"/recipeapp/recipe-upload-success\" render={() => (\r\n        <>\r\n          {navbar}\r\n          {/* <RecipeUploadSuccess\r\n            loggedInUser={loggedInUser}\r\n            onLogout={this.handleLogout}\r\n          /> */}\r\n        </>\r\n      )} />\r\n      <Route path=\"/recipeapp/recipe/:recipeId\" render={(props) => (\r\n        <>\r\n          {navbar}\r\n          {/* <RecipePage\r\n            {...props}\r\n            loggedInUser={loggedInUser}\r\n            onLogout={this.handleLogout}\r\n          /> */}\r\n        </>\r\n      )} />\r\n      <Route path=\"/recipeapp/all-recipes\" render={() => (\r\n        <>\r\n          {navbar}\r\n          {/* <AllRecipes\r\n            loggedInUser={loggedInUser}\r\n            onLogout={this.handleLogout}\r\n          /> */}\r\n        </>\r\n      )} />\r\n      <Route path=\"/recipeapp/myrecipes\" render={() => (\r\n        <>\r\n          {navbar}\r\n          {/* <MyRecipes\r\n            loggedInUser={loggedInUser}\r\n            onLogout={this.handleLogout}\r\n          /> */}\r\n        </>\r\n      )} />\r\n      <Route path=\"/recipeapp/recipe-upload\" render={() => (\r\n        <>\r\n          {navbar}\r\n          {/* <RecipeUpload\r\n            loggedInUser={loggedInUser}\r\n            onLogout={this.handleLogout}\r\n          /> */}\r\n        </>\r\n      )} />\r\n      <Route path=\"/recipeapp/login\" render={() => (\r\n        <>\r\n          {navbar}\r\n          {/* <Login \r\n            loggedInUser={loggedInUser}\r\n            onLogout={this.handleLogout}\r\n            onLoginFormChange={this.handleLoginFormChange}\r\n            loginSubmit={this.handleLoginSubmit}\r\n            username={username}\r\n            password={password}\r\n          /> */}\r\n        </>\r\n      )} />\r\n      <Route path=\"/recipeapp/create-account\" render={() => (\r\n        <>\r\n          {navbar}\r\n          {/* <CreateAccount\r\n            loggedInUser={loggedInUser}\r\n            onLogout={this.handleLogout}\r\n            onLoginFormChange={this.handleLoginFormChange}\r\n            setNewLoggedInUser={this.handleNewLoggedInUser}\r\n          /> */}\r\n        </>\r\n      )} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default App;","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\reportWebVitals.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\AddData.js",["100"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NavbarContainer.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\global_items.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NapTimesChart.js",["101","102","103"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\EnterBedTimesChart.js",["104","105","106","107","108"],"import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './EnterBedTimesChart.scss';\r\nimport { VictoryChart, VictoryAxis, VictoryTheme, VictoryLine, VictoryLabel, VictoryTooltip, VictoryScatter } from 'victory';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport {url, c, nightModeTransitionTime, victoryAxisStyle, getLongDate,  VictoryScatterLineComplement, victoryLineStyle} from './global_items';\r\n\r\nconst urlGetData = `${url}get-data`;\r\n//make it so graph updates when component loads\r\n\r\nclass EnterBedTimesChart extends React.Component {\r\n  state = {\r\n    chartInfo: []\r\n  }\r\n  componentDidMount(){\r\n    axios.post(urlGetData, {user: this.props.loggedInUser})\r\n    .then(res => {\r\n      let newChartInfo = [];\r\n      res.data.map(x => {\r\n        newChartInfo = [...newChartInfo, {\r\n          date: x.date,\r\n          enterBedTime: x.enterBedTime\r\n        }];\r\n        return null;\r\n      })\r\n      this.setState({chartInfo: newChartInfo});\r\n    })\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    if (prevProps.loggedInUser !== this.props.loggedInUser){\r\n      axios.post(urlGetData, {user: this.props.loggedInUser})\r\n      .then(res => {\r\n        let newChartInfo = [];\r\n        res.data.map(x => {\r\n          newChartInfo = [...newChartInfo, {\r\n            date: x.date,\r\n            enterBedTime: x.enterBedTime\r\n          }];\r\n          return null;\r\n        })\r\n        this.setState({chartInfo: newChartInfo});\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const {chartInfo} = this.state;\r\n    let dateLabels = [];\r\n    let xAxisTickValues = [];\r\n    let data;\r\n    if (chartInfo.length > 1) {\r\n      data = chartInfo.filter(napObj => napObj.enterBedTime).map((e, i, arr) => {\r\n        //DATE JAN 1 2000 USED BECAUSE DATE NEEDED FOR TIME VALUE\r\n        const dateTime = new Date(`January 1, 2000 ${e.enterBedTime}`);\r\n\r\n        \r\n        const date = Math.floor(Date.parse(e.date)/1000/86400) - 1;\r\n        xAxisTickValues = [...xAxisTickValues, date];\r\n        const dateLabelPrimer = new Date(Date.parse(e.date) - 1000*86400);\r\n\r\n        const dateLabel = `${dateLabelPrimer.getMonth()+1}/${dateLabelPrimer.getDate()}`; \r\n        dateLabels = [...dateLabels, dateLabel];\r\n        return(\r\n          { x: date, y: dateTime, dateLabel: getLongDate(dateLabelPrimer), timeLabel: formatAMPM(dateTime) }\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"victory-chart-1-container\">\r\n          <VictoryChart\r\n            theme={VictoryTheme.material}\r\n            padding={{ left: 70, top: 20, right: 30, bottom: 50 }}\r\n            scale={{y:'time'}}\r\n            domainPadding={{ x: 20, y: 20 }}\r\n          >\r\n            <VictoryAxis\r\n              tickValues={xAxisTickValues}\r\n              tickFormat={dateLabels}\r\n              tickLabelComponent={<VictoryLabel dy={0} dx={10} angle={55}/>}\r\n              fixLabelOverlap={true}\r\n              style={victoryAxisStyle('x', this.props.nightMode)}\r\n              />\r\n            <VictoryAxis\r\n              style={victoryAxisStyle('y', this.props.nightMode)}\r\n              dependentAxis\r\n              tickFormat={(y) => formatAMPM(y)}\r\n            />\r\n            <VictoryLine\r\n              data={data}\r\n              style={victoryLineStyle(this.props.nightMode, 'enterBedCharts')}\r\n            />\r\n            {VictoryScatterLineComplement(data, this.props.nightMode, 'enterBedCharts')}\r\n          </VictoryChart>\r\n          <h2 className={this.props.nightMode ? \"enter-bed-charts enter-bed-charts-heading-night\" : \"enter-bed-charts-heading\"} title=\"This is the time that you entered your bed - you may not yet have turned the lights off.\">Time in Bed</h2>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EnterBedTimesChart; \r\n\r\nfunction formatAMPM(date) {\r\n  var hours = date.getHours();\r\n  var minutes = date.getMinutes();\r\n  var ampm = hours >= 12 ? 'pm' : 'am';\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12; // the hour '0' should be '12'\r\n  minutes = minutes < 10 ? '0'+minutes : minutes;\r\n  var strTime = hours + ':' + minutes + ' ' + ampm;\r\n  return strTime;\r\n}\r\n\r\nEnterBedTimesChart.propTypes = {\r\n  dates: PropTypes.array,\r\n  nightMode: PropTypes.bool, \r\n  loggedInUser: PropTypes.string\r\n}","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\MorningWakeTimesChart.js",["109","110","111"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\LightsOffTimesChart.js",["112","113","114"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ExitBedTimesChart.js",["115","116","117"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\TimeToFallAsleepChart.js",["118","119","120"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ShootingStarTest.js",["121"],"\r\nimport shootingStar from './images/shooting-star-opt.svg';\r\nimport './HomeLoggedOut.scss';\r\n\r\nfunction ShootingStarTest(){\r\n  return(\r\n    <div className=\"divdiv\" style={{backgroundColor: 'black', width: '100vh', height: '100vh'}}>\r\n      <div className=\"home-logged-out-section-1-shooting-star\">\r\n        <svg id=\"SVGRoot\" width=\"5\" height=\"5\" version=\"1.1\" viewBox=\"0 0 5 5\">\r\n          <circle cx=\"2.5446\" cy=\"2.4777\" r=\"2.3661\" fill=\"#fff\" stroke-width=\"0\"/>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShootingStarTest;",["122","123"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\HomeLoggedOut.js",["124","125","126"],"import { Button, Container } from 'react-bootstrap';\r\nimport './HomeLoggedOut.scss';\r\nimport graphScreenshot1 from './images/time-out-of-bed-screenshot-square.png';\r\nimport graphScreenshot2 from './images/time-to-fall-asleep-screenshot-square.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction HomeLoggedOut() {\r\n  return(\r\n    <>\r\n      <div className=\"home-logged-out-section-1-shooting-star\">\r\n        <svg width=\"60mm\" height=\"60mm\" version=\"1.1\" viewBox=\"0 0 60 60\">\r\n          <defs>\r\n            <filter id=\"filter6059\" x=\"-1.9142e-5\" y=\"-1.9258e-5\" width=\"1\" height=\"1\" color-interpolation-filters=\"sRGB\">\r\n            <feGaussianBlur stdDeviation=\"0.00049892852\"/>\r\n            </filter>\r\n          </defs>\r\n          <path transform=\"matrix(.9426 0 0 .94833 1.2795 2.1897)\" d=\"m-0.75595 60.665 62.555-62.177\" fill=\"none\" filter=\"url(#filter6059)\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"1.3992\"/>\r\n          </svg>\r\n      </div>\r\n      \r\n      <Container className=\"home-logged-out-container\">\r\n        <div className=\"home-logged-out-section home-logged-out-section-1\">\r\n          <h1>Welcome to Sleep App</h1>\r\n          <div>Improve your sleep.</div>\r\n          <div>Change your life.</div>\r\n        </div>\r\n\r\n        <div className=\"home-logged-out-section home-logged-out-section-2\">\r\n          <div  className=\"home-logged-out-section-background home-logged-out-section-2-background\"></div>\r\n          <div className=\"home-logged-out-section-text\">\r\n            <h2>How It Works</h2>\r\n            <div>Simply input your sleep data each day, and view generated graphs to track your sleep progress.</div>\r\n          </div>\r\n          <div className=\"home-logged-out-section-2-graphs\">\r\n            <img src={graphScreenshot1} />\r\n            <img src={graphScreenshot2} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"home-logged-out-section home-logged-out-section-3\">\r\n          <div  className=\"home-logged-out-section-background home-logged-out-section-3-background\"></div>\r\n          <div className=\"home-logged-out-section-text\">\r\n            <h2>Why Seeing Data Helps</h2>\r\n            <div>Having a visual record of your sleep habits allows you to compare which factors are affecting your sleep wellness.</div>\r\n          </div>\r\n          <div className=\"home-logged-out-section-2-graphs\">\r\n            <img src={graphScreenshot2} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"home-logged-out-section home-logged-out-section-1\">\r\n          <h2>Better sleep.</h2>\r\n          <h2>Better life.</h2>\r\n          <h2>Starting tonight.</h2>\r\n          <div className=\"home-logged-out-section-3-button-container\">\r\n            <Button as={Link} to={'/sleep/create-account'}>Create Account</Button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeLoggedOut; ","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\CreateAccount.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\CreateAccountSuccess.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\MinutesEarlyWokeChart.js",["127","128"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ArousalDurationChart.js",["129"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\QualityRatingChart.js",["130","131"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\SleepAidItemChart.js",["132","133"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NightModeSwitch.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":11,"column":14,"nodeType":"140","messageId":"141","endLine":11,"endColumn":15},{"ruleId":"138","severity":1,"message":"142","line":16,"column":21,"nodeType":"140","messageId":"141","endLine":16,"endColumn":24},{"ruleId":"138","severity":1,"message":"143","line":16,"column":26,"nodeType":"140","messageId":"141","endLine":16,"endColumn":29},{"ruleId":"138","severity":1,"message":"144","line":26,"column":9,"nodeType":"140","messageId":"141","endLine":26,"endColumn":17},{"ruleId":"138","severity":1,"message":"145","line":48,"column":9,"nodeType":"140","messageId":"141","endLine":48,"endColumn":22},{"ruleId":"138","severity":1,"message":"146","line":65,"column":9,"nodeType":"140","messageId":"141","endLine":65,"endColumn":30},{"ruleId":"147","severity":1,"message":"148","line":39,"column":6,"nodeType":"149","endLine":39,"endColumn":13,"suggestions":"150"},{"ruleId":"138","severity":1,"message":"151","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":7,"column":14,"nodeType":"140","messageId":"141","endLine":7,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":88,"column":15,"nodeType":"154","endLine":88,"endColumn":66},{"ruleId":"138","severity":1,"message":"151","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"155","line":4,"column":78,"nodeType":"140","messageId":"141","endLine":4,"endColumn":92},{"ruleId":"138","severity":1,"message":"156","line":4,"column":94,"nodeType":"140","messageId":"141","endLine":4,"endColumn":108},{"ruleId":"138","severity":1,"message":"139","line":7,"column":14,"nodeType":"140","messageId":"141","endLine":7,"endColumn":15},{"ruleId":"138","severity":1,"message":"157","line":7,"column":17,"nodeType":"140","messageId":"141","endLine":7,"endColumn":40},{"ruleId":"138","severity":1,"message":"151","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":7,"column":14,"nodeType":"140","messageId":"141","endLine":7,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":84,"column":15,"nodeType":"154","endLine":84,"endColumn":66},{"ruleId":"138","severity":1,"message":"151","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"156","line":3,"column":78,"nodeType":"140","messageId":"141","endLine":3,"endColumn":92},{"ruleId":"138","severity":1,"message":"139","line":6,"column":14,"nodeType":"140","messageId":"141","endLine":6,"endColumn":15},{"ruleId":"138","severity":1,"message":"151","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":6,"column":14,"nodeType":"140","messageId":"141","endLine":6,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":83,"column":17,"nodeType":"154","endLine":83,"endColumn":68},{"ruleId":"138","severity":1,"message":"139","line":5,"column":14,"nodeType":"140","messageId":"141","endLine":5,"endColumn":15},{"ruleId":"138","severity":1,"message":"158","line":5,"column":78,"nodeType":"140","messageId":"141","endLine":5,"endColumn":102},{"ruleId":"152","severity":1,"message":"153","line":80,"column":17,"nodeType":"154","endLine":80,"endColumn":68},{"ruleId":"138","severity":1,"message":"159","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"134","replacedBy":"160"},{"ruleId":"136","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":35,"column":13,"nodeType":"164","endLine":35,"endColumn":43},{"ruleId":"162","severity":1,"message":"163","line":36,"column":13,"nodeType":"164","endLine":36,"endColumn":43},{"ruleId":"162","severity":1,"message":"163","line":47,"column":13,"nodeType":"164","endLine":47,"endColumn":43},{"ruleId":"138","severity":1,"message":"139","line":5,"column":14,"nodeType":"140","messageId":"141","endLine":5,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":82,"column":17,"nodeType":"154","endLine":82,"endColumn":68},{"ruleId":"138","severity":1,"message":"139","line":5,"column":14,"nodeType":"140","messageId":"141","endLine":5,"endColumn":15},{"ruleId":"138","severity":1,"message":"139","line":5,"column":14,"nodeType":"140","messageId":"141","endLine":5,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":95,"column":17,"nodeType":"154","endLine":95,"endColumn":68},{"ruleId":"138","severity":1,"message":"139","line":5,"column":14,"nodeType":"140","messageId":"141","endLine":5,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":82,"column":17,"nodeType":"154","endLine":82,"endColumn":68},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'c' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Row' is defined but never used.","'Redirect' is defined but never used.","'checkLoggedIn' is assigned a value but never used.","'handleNewLoggedInUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkExistingData'. Either include it or remove the dependency array.","ArrayExpression",["167"],"'Container' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'VictoryTooltip' is defined but never used.","'VictoryScatter' is defined but never used.","'nightModeTransitionTime' is defined but never used.","'victoryTooltipLabelStyle' is defined but never used.","'shootingStar' is defined but never used.",["165"],["166"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},"Update the dependencies array to be: [checkExistingData, props]",{"range":"170","text":"171"},[1756,1763],"[checkExistingData, props]"]