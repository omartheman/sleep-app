[{"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\index.js":"1","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\App.js":"2","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\reportWebVitals.js":"3","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\AddData.js":"4","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NavbarContainer.js":"5","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\global_items.js":"6","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NapTimesChart.js":"7","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\EnterBedTimesChart.js":"8","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\MorningWakeTimesChart.js":"9","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\LightsOffTimesChart.js":"10","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ExitBedTimesChart.js":"11","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\TimeToFallAsleepChart.js":"12","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\HomeLoggedOut.js":"13","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\HomeLoggedOut_SVG.js":"14"},{"size":661,"mtime":1609548489364,"results":"15","hashOfConfig":"16"},{"size":6928,"mtime":1609997361904,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":14050,"mtime":1609908607513,"results":"19","hashOfConfig":"16"},{"size":5099,"mtime":1609990751599,"results":"20","hashOfConfig":"16"},{"size":1034,"mtime":1609992360864,"results":"21","hashOfConfig":"16"},{"size":4783,"mtime":1609977456589,"results":"22","hashOfConfig":"16"},{"size":3464,"mtime":1609967420737,"results":"23","hashOfConfig":"16"},{"size":2865,"mtime":1609967315620,"results":"24","hashOfConfig":"16"},{"size":2820,"mtime":1609967281124,"results":"25","hashOfConfig":"16"},{"size":2863,"mtime":1609967244814,"results":"26","hashOfConfig":"16"},{"size":3852,"mtime":1609977734336,"results":"27","hashOfConfig":"16"},{"size":674,"mtime":1609997373884,"results":"28","hashOfConfig":"16"},{"size":3901,"mtime":1609993026994,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"asvjz",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\index.js",[],["60","61"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\App.js",["62","63","64"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\reportWebVitals.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\AddData.js",["65"],"import { useState, useEffect } from 'react';\r\nimport { Alert, Button, Container, Form } from 'react-bootstrap';\r\nimport { Calendar } from 'react-calendar';\r\nimport './AddData.scss';\r\nimport axios from 'axios';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport {c, getClickedDate, url} from './global_items';\r\n\r\nconst urlCheckExistingData = `${url}check-existing-data`;\r\nconst urlUploadData = `${url}upload-data`;\r\n\r\naxios.defaults.headers.common['Cache-Control'] = 'no-cache';\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction AddData (props) {\r\n  const [value, onChange] = useState(new Date());\r\n  const [date, setDate] = useState(null);\r\n  const [existingDataAlert, setExistingDataAlert] = useState(false);\r\n  const [existingNapStart, setExistingNapStart] = useState('');\r\n  const [existingNapEnd, setExistingNapEnd] = useState('');\r\n  const [sleepAidItem, setSleepAidItem] = useState('');\r\n  const [sleepAidMg, setSleepAidMg] = useState('');\r\n  const [enterBedTime, setEnterBedTime] = useState('');\r\n  const [lightsOffTime, setLightsOffTime] = useState('');\r\n  const [timeToFallAsleep, setTimeToFallAsleep] = useState('');\r\n  const [numberTimesArousal, setNumberTimesArousal] = useState('');\r\n  const [arousalDuration, setArousalDuration] = useState('');\r\n  const [morningWakeTime, setMorningWakeTime] = useState('');\r\n  const [exitBedTime, setExitBedTime] = useState('');\r\n  const [minutesEarlyWoke, setMinutesEarlyWoke] = useState('');\r\n  const [qualityRating, setQualityRating] = useState('');\r\n  const [clickedDate, setClickedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let d = new Date();\r\n    setDate(d);\r\n    checkExistingData(d);\r\n  }, []);\r\n\r\n  const checkExistingData = (clickedDate) => {\r\n    c('running checkexisitn', clickedDate)\r\n    axios.post(urlCheckExistingData, {\r\n      clickedDate: getClickedDate(clickedDate, 'mysql'),\r\n      user: props.loggedInUser\r\n    })\r\n    .then(res => {\r\n      setClickedDate(getClickedDate(clickedDate, 'mysql'));\r\n      c('axios postin')\r\n      c('res',res)\r\n      if (res.data.length > 0){\r\n\r\n        setExistingNapStart(res.data[0].napStartTime ? res.data[0].napStartTime : '');\r\n        setExistingNapEnd(res.data[0].napEndTime ? res.data[0].napEndTime : '');\r\n        setSleepAidItem(res.data[0].sleepAidItem ? res.data[0].sleepAidItem : '');\r\n        setSleepAidMg(res.data[0].sleepAidMg ? res.data[0].sleepAidMg : '');\r\n        setEnterBedTime(res.data[0].enterBedTime ? res.data[0].enterBedTime : '');\r\n        setLightsOffTime(res.data[0].lightsOffTime ? res.data[0].lightsOffTime : '');\r\n        setTimeToFallAsleep(res.data[0].timeToFallAsleep ? res.data[0].timeToFallAsleep : '');\r\n        setNumberTimesArousal(res.data[0].numberTimesArousal ? res.data[0].numberTimesArousal : '');\r\n        setArousalDuration(res.data[0].arousalDuration ? res.data[0].arousalDuration : '');\r\n        setMorningWakeTime(res.data[0].morningWakeTime ? res.data[0].morningWakeTime : '');\r\n        setExitBedTime(res.data[0].exitBedTime ? res.data[0].exitBedTime : '');\r\n        setMinutesEarlyWoke(res.data[0].minutesEarlyWoke ? res.data[0].minutesEarlyWoke : '');\r\n        setQualityRating(res.data[0].qualityRating ? res.data[0].qualityRating : '');\r\n\r\n        setExistingDataAlert(true);\r\n      } else {\r\n        const dataFuncs = [setExistingNapStart, setExistingNapEnd, setSleepAidItem, setSleepAidMg, setEnterBedTime, setLightsOffTime, setTimeToFallAsleep, setNumberTimesArousal, setArousalDuration, setMorningWakeTime, setExitBedTime, setMinutesEarlyWoke, setQualityRating];\r\n        for (let i = 0; i < dataFuncs.length; i++){\r\n          dataFuncs[i]('');\r\n        }\r\n        setExistingDataAlert(false);\r\n      }\r\n    })\r\n  } \r\n  const handleDataSubmit = () => {\r\n    c('clickedDate', clickedDate)\r\n    axios.post(urlUploadData, {\r\n      //Ternarys were set to not give a value for SQL when there is none. Helps with creating graphs to skip data.\r\n      user: props.loggedInUser,\r\n      date: clickedDate === '' ? null : clickedDate,\r\n      napStartTime: existingNapStart === '' ? null : existingNapStart,\r\n      napEndTime: existingNapEnd === '' ? null : existingNapEnd,\r\n      sleepAidItem: sleepAidItem === '' ? null : sleepAidItem,\r\n      sleepAidMg: sleepAidMg === '' ? null : sleepAidMg,\r\n      enterBedTime: enterBedTime === '' ? null : enterBedTime,\r\n      lightsOffTime: lightsOffTime === '' ? null : lightsOffTime,\r\n      timeToFallAsleep: timeToFallAsleep === '' ? null : timeToFallAsleep,\r\n      numberTimesArousal: numberTimesArousal === '' ? null : numberTimesArousal,\r\n      arousalDuration: arousalDuration === '' ? null : arousalDuration,\r\n      morningWakeTime: morningWakeTime === '' ? null : morningWakeTime,\r\n      exitBedTime: exitBedTime === '' ? null : exitBedTime,\r\n      minutesEarlyWoke: minutesEarlyWoke === '' ? null : minutesEarlyWoke,\r\n      qualityRating: qualityRating === '' ? null : qualityRating\r\n    })\r\n  };\r\n  let dateHeading;\r\n  let dateClickedYear;\r\n  if (date){\r\n    dateHeading = getClickedDate(date);\r\n    dateClickedYear = date.getFullYear();\r\n  }\r\n  const handleFormInput = (e) => {\r\n    c('e id', e.target.getAttribute('id_val'));\r\n    c('existnap value', e.target.value);\r\n    if (e.target.getAttribute('id_val') === 'nap-start-time') {\r\n      setExistingNapStart(e.target.value);\r\n    } else if (e.target.getAttribute('id_val') === 'nap-end-time') {\r\n      setExistingNapEnd(e.target.value);\r\n    } else if (e.target.getAttribute('id_val') === 'sleep-aid-item'){\r\n      setSleepAidItem(e.target.value);\r\n    } else if (e.target.getAttribute('id_val') === 'sleep-aid-mg'){\r\n      setSleepAidMg(e.target.value);\r\n    } else if (e.target.getAttribute('id_val') === 'enter-bed-time'){\r\n      setEnterBedTime(e.target.value);\r\n    } else if (e.target.getAttribute('id_val') === 'lights-off-time'){\r\n      setLightsOffTime(e.target.value);\r\n    } else if (e.target.getAttribute('id_val') === 'time-to-fall-asleep'){\r\n      setTimeToFallAsleep(e.target.value);\r\n    } else if (e.target.getAttribute('id_val') === 'number-times-arousal'){\r\n      setNumberTimesArousal(e.target.value);\r\n    } else if (e.target.getAttribute('id_val') === 'arousal-duration'){\r\n      setArousalDuration(e.target.value);\r\n    } else if (e.target.getAttribute('id_val') === 'morning-wake-time'){\r\n      setMorningWakeTime(e.target.value);\r\n    } else if (e.target.getAttribute('id_val') === 'exit-bed-time'){\r\n      setExitBedTime(e.target.value);\r\n    } else if (e.target.getAttribute('id_val') === 'minutes-early-woke'){\r\n      setMinutesEarlyWoke(e.target.value);\r\n    } else if (e.target.getAttribute('id_val') === 'quality-rating'){\r\n      setQualityRating(e.target.value);\r\n    }\r\n  }\r\n  const curYear = (new Date()).getFullYear();\r\n  return(\r\n    <>\r\n      <Container className=\"add-data\">\r\n        <h1>Add Data</h1>\r\n        <h2>Pick a Date to Add Data</h2> \r\n        <Calendar\r\n          onChange={onChange}\r\n          value={value}\r\n          view={'month'}\r\n          onClickDay={(value, event) => {\r\n            // console.log('New date is: ', value)\r\n            // c('valueonly', value);\r\n            setDate(value);\r\n            c('date value', value)\r\n            checkExistingData(value);\r\n          }}\r\n        />\r\n        {date && \r\n          <>\r\n            <h2>Adding data for {getClickedDate(date) === getClickedDate((new Date())) && 'today: '}<strong>{dateHeading}</strong>: </h2>\r\n            {(dateClickedYear < curYear || dateClickedYear > curYear) && \r\n              <Alert variant=\"warning\">The day you clicked is not in the current year of {curYear}. If you're lost, click the chevron symbols (« or ») at the top of the calendar to scroll between years.</Alert>\r\n            }\r\n            {existingDataAlert && \r\n              <Alert variant=\"success\">You have already submitted data for {dateHeading}. Your previous data has been autofilled below. You can resubmit if you would like to add or change data.</Alert>\r\n            }\r\n            <Form className=\"add-data-form\">\r\n              <Form.Label>1a. Yesterday I started my first nap at ___. (Example: <span className=\"add-data-form-example\">2:30 PM</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"nap-start-time\"\r\n                type=\"time\" \r\n                className={existingNapStart !== '' && \"existing-data\"}\r\n                value={existingNapStart} \r\n                placeholder={existingNapStart} \r\n                onChange={handleFormInput}\r\n              />\r\n              <Form.Label>1a. Yesterday I ended my last nap at ___. (Example: <span className=\"add-data-form-example\">3:15 PM</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"nap-end-time\"\r\n                className={existingNapEnd !== '' && \"existing-data\"}\r\n                type=\"time\" \r\n                value={existingNapEnd}\r\n                onChange={handleFormInput}\r\n              />\r\n              <Form.Label>2a. Last night I took ___ as a sleep aid. (Example: <span className=\"add-data-form-example\">Ambien</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"sleep-aid-item\"\r\n                className={sleepAidItem !== '' && \"existing-data\"}\r\n                type=\"text\" \r\n                value={sleepAidItem}\r\n                onChange={handleFormInput}\r\n              />\r\n              <Form.Label>2b. The amount of sleep aid I took last night was ___ mg/ounces (mg for medication / ounces for alcohol). (Example: <span className=\"add-data-form-example\">5</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"sleep-aid-mg\"\r\n                className={sleepAidMg !== '' && \"existing-data\"}\r\n                type=\"number\" \r\n                value={sleepAidMg}\r\n                onChange={handleFormInput}\r\n              />\r\n              <Form.Label>3a. Last night I got into bed at ___.  (Example: <span className=\"add-data-form-example\">11:00 PM</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"enter-bed-time\"\r\n                className={enterBedTime !== '' && \"existing-data\"}\r\n                type=\"time\" \r\n                value={enterBedTime}\r\n                onChange={handleFormInput}\r\n              />\r\n              <Form.Label>3b. Last night I turned off the lights and tried to fall asleep at ___. (Example: <span className=\"add-data-form-example\">11:40 PM</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"lights-off-time\"\r\n                className={lightsOffTime !== '' && \"existing-data\"}\r\n                type=\"time\" \r\n                value={lightsOffTime}\r\n                onChange={handleFormInput}\r\n              />\r\n              <Form.Label>4. After I turned off the lights, it took me about ___ minutes to fall asleep. (Example: <span className=\"add-data-form-example\">75 min</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"time-to-fall-asleep\"\r\n                className={timeToFallAsleep !== '' && \"existing-data\"}\r\n                type=\"number\" \r\n                value={timeToFallAsleep}\r\n                onChange={handleFormInput}\r\n              />\r\n              <Form.Label>5. I woke up from sleep ___ times. (Do not count when you finally woke up here.) (Example: <span className=\"add-data-form-example\">3 times</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"number-times-arousal\"\r\n                className={numberTimesArousal !== '' && \"existing-data\"}\r\n                type=\"number\" \r\n                value={numberTimesArousal}\r\n                onChange={handleFormInput}\r\n              />\r\n              <Form.Label>6. My arousals lasted ___ minutes. (List each arousal seperately.) (Example: <span className=\"add-data-form-example\">25 min, 40 min, 10 min</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"arousal-duration\"\r\n                className={arousalDuration !== '' && \"existing-data\"}\r\n                type=\"number\" \r\n                value={arousalDuration}\r\n                onChange={handleFormInput}\r\n              />\r\n              <Form.Label>7. Today I woke up at ___. (Note: this is when you finally woke up.) (Example: <span className=\"add-data-form-example\">6:30 AM</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"morning-wake-time\"\r\n                className={morningWakeTime !== '' && \"existing-data\"}\r\n                type=\"time\" \r\n                value={morningWakeTime}\r\n                onChange={handleFormInput}\r\n              />\r\n              <Form.Label>8. Today I got out of bed for the day at ___. (Example: <span className=\"add-data-form-example\">06:45 AM</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"exit-bed-time\"\r\n                className={exitBedTime !== '' && \"existing-data\"}\r\n                type=\"time\" \r\n                value={exitBedTime}\r\n                onChange={handleFormInput}\r\n              />\r\n              <Form.Label>9. Today I woke up ___ minutes earlier than I wanted to. (Example: <span className=\"add-data-form-example\">0</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"minutes-early-woke\"\r\n                className={minutesEarlyWoke !== '' && \"existing-data\"}\r\n                type=\"number\" \r\n                value={minutesEarlyWoke}\r\n                onChange={handleFormInput}\r\n              />\r\n              <Form.Label>\r\n                10.  I would rate the quality of last night's sleep as 1 = very poor, 2 = poor, 3 = fair, 4 = good, or 5 = excellent. (Example: <span className=\"add-data-form-example\">3</span>)</Form.Label>\r\n              <Form.Control \r\n                id_val=\"quality-rating\"\r\n                className={qualityRating !== '' && \"existing-data\"}\r\n                type=\"number\" \r\n                value={qualityRating}\r\n                onChange={handleFormInput}\r\n              />\r\n            </Form>\r\n            <Button onClick={handleDataSubmit}>Submit</Button>\r\n          </>\r\n        }\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddData;","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NavbarContainer.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\global_items.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\NapTimesChart.js",["66","67"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\EnterBedTimesChart.js",["68","69","70","71"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\MorningWakeTimesChart.js",["72","73"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\LightsOffTimesChart.js",["74","75"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\ExitBedTimesChart.js",["76","77","78"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\TimeToFallAsleepChart.js",["79","80"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\HomeLoggedOut.js",["81","82"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\HomeLoggedOut_SVG.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":11,"column":14,"nodeType":"89","messageId":"90","endLine":11,"endColumn":15},{"ruleId":"87","severity":1,"message":"91","line":41,"column":9,"nodeType":"89","messageId":"90","endLine":41,"endColumn":22},{"ruleId":"87","severity":1,"message":"92","line":59,"column":9,"nodeType":"89","messageId":"90","endLine":59,"endColumn":30},{"ruleId":"93","severity":1,"message":"94","line":38,"column":6,"nodeType":"95","endLine":38,"endColumn":8,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":7,"column":14,"nodeType":"89","messageId":"90","endLine":7,"endColumn":15},{"ruleId":"87","severity":1,"message":"97","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"87","severity":1,"message":"98","line":4,"column":64,"nodeType":"89","messageId":"90","endLine":4,"endColumn":76},{"ruleId":"87","severity":1,"message":"88","line":7,"column":14,"nodeType":"89","messageId":"90","endLine":7,"endColumn":15},{"ruleId":"87","severity":1,"message":"99","line":40,"column":15,"nodeType":"89","messageId":"90","endLine":40,"endColumn":26},{"ruleId":"87","severity":1,"message":"97","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":7,"column":14,"nodeType":"89","messageId":"90","endLine":7,"endColumn":15},{"ruleId":"87","severity":1,"message":"97","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":6,"column":14,"nodeType":"89","messageId":"90","endLine":6,"endColumn":15},{"ruleId":"87","severity":1,"message":"97","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"87","severity":1,"message":"98","line":3,"column":64,"nodeType":"89","messageId":"90","endLine":3,"endColumn":76},{"ruleId":"87","severity":1,"message":"88","line":6,"column":14,"nodeType":"89","messageId":"90","endLine":6,"endColumn":15},{"ruleId":"87","severity":1,"message":"97","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":6,"column":14,"nodeType":"89","messageId":"90","endLine":6,"endColumn":15},{"ruleId":"87","severity":1,"message":"100","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":30},{"ruleId":"87","severity":1,"message":"101","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":21},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'c' is defined but never used.","Identifier","unusedVar","'checkLoggedIn' is assigned a value but never used.","'handleNewLoggedInUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkExistingData'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'Container' is defined but never used.","'VictoryLabel' is defined but never used.","'dateTimeEnd' is assigned a value but never used.","'svgLandingPageSection1' is defined but never used.","'backgroundTop' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [checkExistingData]",{"range":"107","text":"108"},[1659,1661],"[checkExistingData]"]