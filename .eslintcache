[{"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\index.js":"1","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\App.js":"2","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\reportWebVitals.js":"3","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\GraphTest.js":"4","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\AddData.js":"5"},{"size":565,"mtime":1609389735974,"results":"6","hashOfConfig":"7"},{"size":1168,"mtime":1609535105385,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":3770,"mtime":1609535105388,"results":"10","hashOfConfig":"7"},{"size":850,"mtime":1609390057460,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"asvjz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\index.js",[],["24","25"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\App.js",["26","27"],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\reportWebVitals.js",[],"C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\GraphTest.js",["28","29","30"],"import React, {Component} from 'react';\r\nimport './GraphTest.scss';\r\nimport * as V from 'victory';\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryLine, VictoryTheme } from 'victory';\r\n\r\nfunction c (msg, input) {return(console.log(`${msg}: `, input))};\r\n\r\nfunction formatAMPM(date) {\r\n  var hours = date.getHours();\r\n  var minutes = date.getMinutes();\r\n  var ampm = hours >= 12 ? 'pm' : 'am';\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12; // the hour '0' should be '12'\r\n  minutes = minutes < 10 ? '0'+minutes : minutes;\r\n  var strTime = hours + ':' + minutes + ' ' + ampm;\r\n  return strTime;\r\n}\r\n\r\n\r\nclass GraphTest extends React.Component {\r\n  render() {\r\n    const {dates, napStartTimes, napInfo} = this.props;\r\n    const dateLabels = dates.map((x, i) => {\r\n      const date = new Date(Date.parse(x));\r\n      return(\r\n        `${date.getMonth()+1}/${date.getDate()}`\r\n      )\r\n    });\r\n    let xAxisTickValues = [];\r\n    let data;\r\n    if (napInfo.length > 1) {\r\n      data = napInfo.map((e, i) => {\r\n        c('napstarttime', e.napStartTime)\r\n        c('datetime', new Date(`January 1, 2000 ${e.napStartTime}`))\r\n        const dateTime = new Date(`January 1, 2000 ${e.napStartTime}`);\r\n        const time = e.napStartTime.split(':');\r\n        const timeNumber = Number(time[0]) + Number(time[1]/60);\r\n        const date = Math.floor(Date.parse(e.date)/1000/86400);\r\n        xAxisTickValues = [...xAxisTickValues, date];\r\n        return(\r\n          { x: date, y: dateTime }\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"victory-chart-1-container\">\r\n          <VictoryChart\r\n            theme={VictoryTheme.material}\r\n            padding={{ left: 70, top: 20, right: 30, bottom: 50 }}\r\n            scale={{y:'time'}}\r\n          >\r\n            <VictoryAxis\r\n              // tickValues specifies both the number of ticks and where\r\n              // they are placed on the axis\r\n              // tickValues={[1, 2, 3, 4, 5]}\r\n              tickValues={xAxisTickValues}\r\n              // tickFormat={[\"1 Jan\", \"2 Jan\", \"3 Jan\", \"Quarter 4\"]}\r\n              tickFormat={dateLabels}\r\n            />\r\n            <VictoryAxis\r\n              dependentAxis\r\n              // tickFormat specifies how ticks should be displayed\r\n              tickFormat={(y) => formatAMPM(y)}\r\n              // tickFormat={(y) => {\r\n              //   return(\r\n              //     `${y-y%1}:${Math.round(y%1*10)/10*60}PM`\r\n              //   );\r\n              // }}\r\n            />\r\n            <VictoryLine\r\n              style={{\r\n                data: { stroke: \"#c43a31\" },\r\n                parent: { border: \"1px solid #ccc\"}\r\n              }}\r\n              data={data}\r\n            />\r\n          </VictoryChart>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GraphTest; ","C:\\Users\\HP EliteBook 8470p\\Documents\\Coding\\sleep-app\\src\\AddData.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":6,"column":7,"nodeType":"37","messageId":"38","endLine":6,"endColumn":10},{"ruleId":"39","severity":1,"message":"40","line":17,"column":22,"nodeType":"41","messageId":"42","endLine":17,"endColumn":24},{"ruleId":"35","severity":1,"message":"43","line":1,"column":16,"nodeType":"37","messageId":"38","endLine":1,"endColumn":25},{"ruleId":"35","severity":1,"message":"44","line":7,"column":19,"nodeType":"37","messageId":"38","endLine":7,"endColumn":32},{"ruleId":"35","severity":1,"message":"45","line":24,"column":15,"nodeType":"37","messageId":"38","endLine":24,"endColumn":25},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Component' is defined but never used.","'napStartTimes' is assigned a value but never used.","'timeNumber' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]